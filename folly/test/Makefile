# Makefile.in generated by automake 1.14.1 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/folly
pkgincludedir = $(includedir)/folly
pkglibdir = $(libdir)/folly
pkglibexecdir = $(libexecdir)/folly
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
TESTS = sorted_vector_types_test$(EXEEXT) foreach_test$(EXEEXT) \
	hash_test$(EXEEXT) timeout_queue_test$(EXEEXT) \
	conv_test$(EXEEXT) range_test$(EXEEXT) bits_test$(EXEEXT) \
	bit_iterator_test$(EXEEXT) $(am__EXEEXT_1) \
	fbstring_test_using_jemalloc$(EXEEXT) \
	thread_cached_int_test$(EXEEXT) thread_local_test$(EXEEXT) \
	fbvector_test$(EXEEXT) dynamic_test$(EXEEXT) \
	json_test$(EXEEXT) scope_guard_test$(EXEEXT) \
	endian_test$(EXEEXT) rw_spinlock_test$(EXEEXT) \
	synchronized_test$(EXEEXT) concurrent_skiplist_test$(EXEEXT) \
	histogram_test$(EXEEXT) group_varint_test$(EXEEXT) \
	map_util_test$(EXEEXT) string_test$(EXEEXT) \
	producer_consumer_queue_test$(EXEEXT) \
	atomic_hash_array_test$(EXEEXT) atomic_hash_map_test$(EXEEXT) \
	format_test$(EXEEXT) fingerprint_test$(EXEEXT) \
	portability_test$(EXEEXT) cpuid_test$(EXEEXT) \
	spooky_hash_v1_test$(EXEEXT) spooky_hash_v2_test$(EXEEXT)
check_PROGRAMS = benchmark_test$(EXEEXT) \
	concurrent_skiplist_benchmark$(EXEEXT) $(am__EXEEXT_2)
am__append_1 = small_locks_test packed_sync_ptr_test \
	small_vector_test discriminated_ptr_test
subdir = test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/depcomp $(noinst_HEADERS) \
	$(top_srcdir)/build-aux/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cxx_compile_stdcxx_0x.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_config_feature.m4 \
	$(top_srcdir)/m4/ax_prefix_config.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
libgtest_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libgtest_la_OBJECTS = gtest-1.6.0/src/libgtest_la-gtest-all.lo
libgtest_la_OBJECTS = $(am_libgtest_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libgtestmain_la_LIBADD =
am_libgtestmain_la_OBJECTS =  \
	gtest-1.6.0/src/libgtestmain_la-gtest-all.lo \
	gtest-1.6.0/src/libgtestmain_la-gtest_main.lo
libgtestmain_la_OBJECTS = $(am_libgtestmain_la_OBJECTS)
am__EXEEXT_1 = small_locks_test$(EXEEXT) \
	packed_sync_ptr_test$(EXEEXT) \
	small_vector_test$(EXEEXT) \
	discriminated_ptr_test$(EXEEXT)
am__EXEEXT_2 = sorted_vector_types_test$(EXEEXT) foreach_test$(EXEEXT) \
	hash_test$(EXEEXT) timeout_queue_test$(EXEEXT) \
	conv_test$(EXEEXT) range_test$(EXEEXT) bits_test$(EXEEXT) \
	bit_iterator_test$(EXEEXT) $(am__EXEEXT_1) \
	fbstring_test_using_jemalloc$(EXEEXT) \
	thread_cached_int_test$(EXEEXT) thread_local_test$(EXEEXT) \
	fbvector_test$(EXEEXT) dynamic_test$(EXEEXT) \
	json_test$(EXEEXT) scope_guard_test$(EXEEXT) \
	endian_test$(EXEEXT) rw_spinlock_test$(EXEEXT) \
	synchronized_test$(EXEEXT) concurrent_skiplist_test$(EXEEXT) \
	histogram_test$(EXEEXT) group_varint_test$(EXEEXT) \
	map_util_test$(EXEEXT) string_test$(EXEEXT) \
	producer_consumer_queue_test$(EXEEXT) \
	atomic_hash_array_test$(EXEEXT) atomic_hash_map_test$(EXEEXT) \
	format_test$(EXEEXT) fingerprint_test$(EXEEXT) \
	portability_test$(EXEEXT) cpuid_test$(EXEEXT) \
	spooky_hash_v1_test$(EXEEXT) spooky_hash_v2_test$(EXEEXT)
am_atomic_hash_array_test_OBJECTS = AtomicHashArrayTest.$(OBJEXT)
atomic_hash_array_test_OBJECTS = $(am_atomic_hash_array_test_OBJECTS)
atomic_hash_array_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_atomic_hash_map_test_OBJECTS = AtomicHashMapTest.$(OBJEXT)
atomic_hash_map_test_OBJECTS = $(am_atomic_hash_map_test_OBJECTS)
atomic_hash_map_test_DEPENDENCIES = libgtest.la \
	$(top_builddir)/libfolly.la \
	$(top_builddir)/libfollybenchmark.la
am_benchmark_test_OBJECTS = BenchmarkTest.$(OBJEXT)
benchmark_test_OBJECTS = $(am_benchmark_test_OBJECTS)
benchmark_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_bit_iterator_test_OBJECTS = BitIteratorTest.$(OBJEXT)
bit_iterator_test_OBJECTS = $(am_bit_iterator_test_OBJECTS)
bit_iterator_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_bits_test_OBJECTS = BitsTest.$(OBJEXT)
bits_test_OBJECTS = $(am_bits_test_OBJECTS)
bits_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_concurrent_skiplist_benchmark_OBJECTS =  \
	ConcurrentSkipListBenchmark.$(OBJEXT)
concurrent_skiplist_benchmark_OBJECTS =  \
	$(am_concurrent_skiplist_benchmark_OBJECTS)
concurrent_skiplist_benchmark_DEPENDENCIES =  \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_concurrent_skiplist_test_OBJECTS =  \
	ConcurrentSkipListTest.$(OBJEXT)
concurrent_skiplist_test_OBJECTS =  \
	$(am_concurrent_skiplist_test_OBJECTS)
concurrent_skiplist_test_DEPENDENCIES = libgtest.la \
	$(top_builddir)/libfolly.la
am_conv_test_OBJECTS = ConvTest.$(OBJEXT)
conv_test_OBJECTS = $(am_conv_test_OBJECTS)
conv_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_cpuid_test_OBJECTS = CpuIdTest.$(OBJEXT)
cpuid_test_OBJECTS = $(am_cpuid_test_OBJECTS)
cpuid_test_DEPENDENCIES = libgtestmain.la $(top_builddir)/libfolly.la
am__discriminated_ptr_test_SOURCES_DIST = DiscriminatedPtrTest.cpp
am_discriminated_ptr_test_OBJECTS =  \
	DiscriminatedPtrTest.$(OBJEXT)
discriminated_ptr_test_OBJECTS = $(am_discriminated_ptr_test_OBJECTS)
discriminated_ptr_test_DEPENDENCIES =  \
	libgtestmain.la $(top_builddir)/libfolly.la
am_dynamic_test_OBJECTS = DynamicTest.$(OBJEXT)
dynamic_test_OBJECTS = $(am_dynamic_test_OBJECTS)
dynamic_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la $(top_builddir)/libfolly.la
am_endian_test_OBJECTS = EndianTest.$(OBJEXT)
endian_test_OBJECTS = $(am_endian_test_OBJECTS)
endian_test_DEPENDENCIES = libgtestmain.la $(top_builddir)/libfolly.la
am_fbstring_test_using_jemalloc_OBJECTS = FBStringTest.$(OBJEXT)
fbstring_test_using_jemalloc_OBJECTS =  \
	$(am_fbstring_test_using_jemalloc_OBJECTS)
fbstring_test_using_jemalloc_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_fbvector_test_OBJECTS = FBVectorTest.$(OBJEXT)
fbvector_test_OBJECTS = $(am_fbvector_test_OBJECTS)
fbvector_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_fingerprint_test_OBJECTS = FingerprintTest.$(OBJEXT)
fingerprint_test_OBJECTS = $(am_fingerprint_test_OBJECTS)
fingerprint_test_DEPENDENCIES = libgtest.la \
	$(top_builddir)/libfolly.la \
	$(top_builddir)/libfollybenchmark.la
am_foreach_test_OBJECTS = ForeachTest.$(OBJEXT)
foreach_test_OBJECTS = $(am_foreach_test_OBJECTS)
foreach_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_format_test_OBJECTS = FormatTest.$(OBJEXT)
format_test_OBJECTS = $(am_format_test_OBJECTS)
format_test_DEPENDENCIES = libgtest.la $(top_builddir)/libfolly.la \
	$(top_builddir)/libfollybenchmark.la
am_group_varint_test_OBJECTS = GroupVarintTest.$(OBJEXT)
group_varint_test_OBJECTS = $(am_group_varint_test_OBJECTS)
group_varint_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_hash_test_OBJECTS = HashTest.$(OBJEXT)
hash_test_OBJECTS = $(am_hash_test_OBJECTS)
hash_test_DEPENDENCIES = libgtestmain.la $(top_builddir)/libfolly.la
am_histogram_test_OBJECTS = HistogramTest.$(OBJEXT)
histogram_test_OBJECTS = $(am_histogram_test_OBJECTS)
histogram_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_json_test_OBJECTS = JsonTest.$(OBJEXT)
json_test_OBJECTS = $(am_json_test_OBJECTS)
json_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la $(top_builddir)/libfolly.la
am_map_util_test_OBJECTS = MapUtilTest.$(OBJEXT)
map_util_test_OBJECTS = $(am_map_util_test_OBJECTS)
map_util_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am__packed_sync_ptr_test_SOURCES_DIST = PackedSyncPtrTest.cpp
am_packed_sync_ptr_test_OBJECTS =  \
	PackedSyncPtrTest.$(OBJEXT)
packed_sync_ptr_test_OBJECTS = $(am_packed_sync_ptr_test_OBJECTS)
packed_sync_ptr_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_portability_test_OBJECTS = PortabilityTest.$(OBJEXT)
portability_test_OBJECTS = $(am_portability_test_OBJECTS)
portability_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_producer_consumer_queue_test_OBJECTS =  \
	ProducerConsumerQueueTest.$(OBJEXT)
producer_consumer_queue_test_OBJECTS =  \
	$(am_producer_consumer_queue_test_OBJECTS)
producer_consumer_queue_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_range_test_OBJECTS = RangeTest.$(OBJEXT)
range_test_OBJECTS = $(am_range_test_OBJECTS)
range_test_DEPENDENCIES = libgtestmain.la $(top_builddir)/libfolly.la
am_rw_spinlock_test_OBJECTS = RWSpinLockTest.$(OBJEXT)
rw_spinlock_test_OBJECTS = $(am_rw_spinlock_test_OBJECTS)
rw_spinlock_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_scope_guard_test_OBJECTS = ScopeGuardTest.$(OBJEXT)
scope_guard_test_OBJECTS = $(am_scope_guard_test_OBJECTS)
scope_guard_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am__small_locks_test_SOURCES_DIST = SmallLocksTest.cpp
am_small_locks_test_OBJECTS =  \
	SmallLocksTest.$(OBJEXT)
small_locks_test_OBJECTS = $(am_small_locks_test_OBJECTS)
small_locks_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am__small_vector_test_SOURCES_DIST = small_vector_test.cpp
am_small_vector_test_OBJECTS =  \
	small_vector_test.$(OBJEXT)
small_vector_test_OBJECTS = $(am_small_vector_test_OBJECTS)
small_vector_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_sorted_vector_types_test_OBJECTS = sorted_vector_test.$(OBJEXT)
sorted_vector_types_test_OBJECTS =  \
	$(am_sorted_vector_types_test_OBJECTS)
sorted_vector_types_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_spooky_hash_v1_test_OBJECTS = SpookyHashV1Test.$(OBJEXT)
spooky_hash_v1_test_OBJECTS = $(am_spooky_hash_v1_test_OBJECTS)
spooky_hash_v1_test_DEPENDENCIES = $(top_builddir)/libfolly.la \
	$(top_builddir)/libfollybenchmark.la
am_spooky_hash_v2_test_OBJECTS = SpookyHashV2Test.$(OBJEXT)
spooky_hash_v2_test_OBJECTS = $(am_spooky_hash_v2_test_OBJECTS)
spooky_hash_v2_test_DEPENDENCIES = $(top_builddir)/libfolly.la \
	$(top_builddir)/libfollybenchmark.la
am_string_test_OBJECTS = StringTest.$(OBJEXT)
string_test_OBJECTS = $(am_string_test_OBJECTS)
string_test_DEPENDENCIES = libgtest.la $(top_builddir)/libfolly.la \
	$(top_builddir)/libfollybenchmark.la
am_synchronized_test_OBJECTS = SynchronizedTest.$(OBJEXT)
synchronized_test_OBJECTS = $(am_synchronized_test_OBJECTS)
synchronized_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
am_thread_cached_int_test_OBJECTS = ThreadCachedIntTest.$(OBJEXT)
thread_cached_int_test_OBJECTS = $(am_thread_cached_int_test_OBJECTS)
thread_cached_int_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_thread_local_test_OBJECTS = ThreadLocalTest.$(OBJEXT)
thread_local_test_OBJECTS = $(am_thread_local_test_OBJECTS)
thread_local_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfollybenchmark.la \
	$(top_builddir)/libfolly.la
am_timeout_queue_test_OBJECTS = TimeoutQueueTest.$(OBJEXT)
timeout_queue_test_OBJECTS = $(am_timeout_queue_test_OBJECTS)
timeout_queue_test_DEPENDENCIES = libgtestmain.la \
	$(top_builddir)/libfolly.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libgtest_la_SOURCES) $(libgtestmain_la_SOURCES) \
	$(atomic_hash_array_test_SOURCES) \
	$(atomic_hash_map_test_SOURCES) $(benchmark_test_SOURCES) \
	$(bit_iterator_test_SOURCES) $(bits_test_SOURCES) \
	$(concurrent_skiplist_benchmark_SOURCES) \
	$(concurrent_skiplist_test_SOURCES) $(conv_test_SOURCES) \
	$(cpuid_test_SOURCES) $(discriminated_ptr_test_SOURCES) \
	$(dynamic_test_SOURCES) $(endian_test_SOURCES) \
	$(fbstring_test_using_jemalloc_SOURCES) \
	$(fbvector_test_SOURCES) $(fingerprint_test_SOURCES) \
	$(foreach_test_SOURCES) $(format_test_SOURCES) \
	$(group_varint_test_SOURCES) $(hash_test_SOURCES) \
	$(histogram_test_SOURCES) $(json_test_SOURCES) \
	$(map_util_test_SOURCES) $(packed_sync_ptr_test_SOURCES) \
	$(portability_test_SOURCES) \
	$(producer_consumer_queue_test_SOURCES) $(range_test_SOURCES) \
	$(rw_spinlock_test_SOURCES) $(scope_guard_test_SOURCES) \
	$(small_locks_test_SOURCES) $(small_vector_test_SOURCES) \
	$(sorted_vector_types_test_SOURCES) \
	$(spooky_hash_v1_test_SOURCES) $(spooky_hash_v2_test_SOURCES) \
	$(string_test_SOURCES) $(synchronized_test_SOURCES) \
	$(thread_cached_int_test_SOURCES) $(thread_local_test_SOURCES) \
	$(timeout_queue_test_SOURCES)
DIST_SOURCES = $(libgtest_la_SOURCES) $(libgtestmain_la_SOURCES) \
	$(atomic_hash_array_test_SOURCES) \
	$(atomic_hash_map_test_SOURCES) $(benchmark_test_SOURCES) \
	$(bit_iterator_test_SOURCES) $(bits_test_SOURCES) \
	$(concurrent_skiplist_benchmark_SOURCES) \
	$(concurrent_skiplist_test_SOURCES) $(conv_test_SOURCES) \
	$(cpuid_test_SOURCES) \
	$(am__discriminated_ptr_test_SOURCES_DIST) \
	$(dynamic_test_SOURCES) $(endian_test_SOURCES) \
	$(fbstring_test_using_jemalloc_SOURCES) \
	$(fbvector_test_SOURCES) $(fingerprint_test_SOURCES) \
	$(foreach_test_SOURCES) $(format_test_SOURCES) \
	$(group_varint_test_SOURCES) $(hash_test_SOURCES) \
	$(histogram_test_SOURCES) $(json_test_SOURCES) \
	$(map_util_test_SOURCES) \
	$(am__packed_sync_ptr_test_SOURCES_DIST) \
	$(portability_test_SOURCES) \
	$(producer_consumer_queue_test_SOURCES) $(range_test_SOURCES) \
	$(rw_spinlock_test_SOURCES) $(scope_guard_test_SOURCES) \
	$(am__small_locks_test_SOURCES_DIST) \
	$(am__small_vector_test_SOURCES_DIST) \
	$(sorted_vector_types_test_SOURCES) \
	$(spooky_hash_v1_test_SOURCES) $(spooky_hash_v2_test_SOURCES) \
	$(string_test_SOURCES) $(synchronized_test_SOURCES) \
	$(thread_cached_int_test_SOURCES) $(thread_local_test_SOURCES) \
	$(timeout_queue_test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/xliu/git/folly/build-aux/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_CPPFLAGS = -I$(top_srcdir)/.. -pthread -I/usr/include
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS =  -lboost_thread -lboost_filesystem -lboost_system -lboost_regex -lpthread
AR = ar
AUTOCONF = ${SHELL} /home/xliu/git/folly/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/xliu/git/folly/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/xliu/git/folly/build-aux/missing automake-1.14
AWK = mawk
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_REGEX_LIB = -lboost_regex
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -Igtest-1.6.0/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -std=gnu++0x -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -llzma -lz -lsnappy -llz4 -liberty -ljemalloc -levent -ldouble-conversion -lssl -lgflags -lglog 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_VERSION = 15:0:0
MAKEINFO = ${SHELL} /home/xliu/git/folly/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = folly
PACKAGE_BUGREPORT = folly@fb.com
PACKAGE_NAME = folly
PACKAGE_STRING = folly 15.0
PACKAGE_TARNAME = folly
PACKAGE_URL = 
PACKAGE_VERSION = 15.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 15.0
abs_builddir = /home/xliu/git/folly/test
abs_srcdir = /home/xliu/git/folly/test
abs_top_builddir = /home/xliu/git/folly
abs_top_srcdir = /home/xliu/git/folly
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/xliu/git/folly/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = . function_benchmark
ACLOCAL_AMFLAGS = -I m4
check_LTLIBRARIES = libgtestmain.la libgtest.la
libgtestmain_la_CPPFLAGS = -Igtest-1.6.0 -Igtest-1.6.0/src
libgtestmain_la_SOURCES = gtest-1.6.0/src/gtest-all.cc gtest-1.6.0/src/gtest_main.cc
libgtest_la_CPPFLAGS = -Igtest-1.6.0 -Igtest-1.6.0/src
libgtest_la_SOURCES = gtest-1.6.0/src/gtest-all.cc
noinst_HEADERS = FBStringTestBenchmarks.cpp.h \
		 FBVectorTestBenchmarks.cpp.h

small_locks_test_SOURCES = SmallLocksTest.cpp
small_locks_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la

# Fails with WARNING: Logging before InitGoogleLogging() is written to STDERR
packed_sync_ptr_test_SOURCES = PackedSyncPtrTest.cpp
packed_sync_ptr_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
small_vector_test_SOURCES = small_vector_test.cpp
small_vector_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
discriminated_ptr_test_SOURCES = DiscriminatedPtrTest.cpp
discriminated_ptr_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
sorted_vector_types_test_SOURCES = sorted_vector_test.cpp
sorted_vector_types_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
foreach_test_SOURCES = ForeachTest.cpp
foreach_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
hash_test_SOURCES = HashTest.cpp
hash_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
fbstring_test_using_jemalloc_SOURCES = FBStringTest.cpp
fbstring_test_using_jemalloc_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
thread_cached_int_test_SOURCES = ThreadCachedIntTest.cpp
thread_cached_int_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
thread_local_test_SOURCES = ThreadLocalTest.cpp
thread_local_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
fbvector_test_SOURCES = FBVectorTest.cpp
fbvector_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la

# fails due to cout
dynamic_test_SOURCES = DynamicTest.cpp
dynamic_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la $(top_builddir)/libfolly.la

# fails due to cout
json_test_SOURCES = JsonTest.cpp
json_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la  $(top_builddir)/libfolly.la
benchmark_test_SOURCES = BenchmarkTest.cpp
benchmark_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la

# fails due to destructor
scope_guard_test_SOURCES = ScopeGuardTest.cpp
scope_guard_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
timeout_queue_test_SOURCES = TimeoutQueueTest.cpp
timeout_queue_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
conv_test_SOURCES = ConvTest.cpp
conv_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
range_test_SOURCES = RangeTest.cpp
range_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
bits_test_SOURCES = BitsTest.cpp
bits_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
bit_iterator_test_SOURCES = BitIteratorTest.cpp
bit_iterator_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
endian_test_SOURCES = EndianTest.cpp
endian_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
rw_spinlock_test_SOURCES = RWSpinLockTest.cpp
rw_spinlock_test_LDADD = libgtestmain.la $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
synchronized_test_SOURCES = SynchronizedTest.cpp
synchronized_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
concurrent_skiplist_test_SOURCES = ConcurrentSkipListTest.cpp
concurrent_skiplist_test_LDADD = libgtest.la $(top_builddir)/libfolly.la
concurrent_skiplist_benchmark_SOURCES = ConcurrentSkipListBenchmark.cpp
concurrent_skiplist_benchmark_LDADD = $(top_builddir)/libfollybenchmark.la $(top_builddir)/libfolly.la
histogram_test_SOURCES = HistogramTest.cpp
histogram_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
group_varint_test_SOURCES = GroupVarintTest.cpp
group_varint_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
map_util_test_SOURCES = MapUtilTest.cpp
map_util_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
string_test_SOURCES = StringTest.cpp
string_test_LDADD = libgtest.la $(top_builddir)/libfolly.la $(top_builddir)/libfollybenchmark.la
producer_consumer_queue_test_SOURCES = ProducerConsumerQueueTest.cpp
producer_consumer_queue_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
atomic_hash_array_test_SOURCES = AtomicHashArrayTest.cpp
atomic_hash_array_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
atomic_hash_map_test_SOURCES = AtomicHashMapTest.cpp
atomic_hash_map_test_LDADD = libgtest.la $(top_builddir)/libfolly.la $(top_builddir)/libfollybenchmark.la
format_test_SOURCES = FormatTest.cpp
format_test_LDADD = libgtest.la $(top_builddir)/libfolly.la $(top_builddir)/libfollybenchmark.la
fingerprint_test_SOURCES = FingerprintTest.cpp
fingerprint_test_LDADD = libgtest.la $(top_builddir)/libfolly.la $(top_builddir)/libfollybenchmark.la
portability_test_SOURCES = PortabilityTest.cpp
portability_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
cpuid_test_SOURCES = CpuIdTest.cpp
cpuid_test_LDADD = libgtestmain.la $(top_builddir)/libfolly.la
spooky_hash_v1_test_SOURCES = SpookyHashV1Test.cpp
spooky_hash_v1_test_LDADD = $(top_builddir)/libfolly.la $(top_builddir)/libfollybenchmark.la
spooky_hash_v2_test_SOURCES = SpookyHashV2Test.cpp
spooky_hash_v2_test_LDADD = $(top_builddir)/libfolly.la $(top_builddir)/libfollybenchmark.la
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
gtest-1.6.0/src/$(am__dirstamp):
	@$(MKDIR_P) gtest-1.6.0/src
	@: > gtest-1.6.0/src/$(am__dirstamp)
gtest-1.6.0/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gtest-1.6.0/src/$(DEPDIR)
	@: > gtest-1.6.0/src/$(DEPDIR)/$(am__dirstamp)
gtest-1.6.0/src/libgtest_la-gtest-all.lo:  \
	gtest-1.6.0/src/$(am__dirstamp) \
	gtest-1.6.0/src/$(DEPDIR)/$(am__dirstamp)

libgtest.la: $(libgtest_la_OBJECTS) $(libgtest_la_DEPENDENCIES) $(EXTRA_libgtest_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libgtest_la_OBJECTS) $(libgtest_la_LIBADD) $(LIBS)
gtest-1.6.0/src/libgtestmain_la-gtest-all.lo:  \
	gtest-1.6.0/src/$(am__dirstamp) \
	gtest-1.6.0/src/$(DEPDIR)/$(am__dirstamp)
gtest-1.6.0/src/libgtestmain_la-gtest_main.lo:  \
	gtest-1.6.0/src/$(am__dirstamp) \
	gtest-1.6.0/src/$(DEPDIR)/$(am__dirstamp)

libgtestmain.la: $(libgtestmain_la_OBJECTS) $(libgtestmain_la_DEPENDENCIES) $(EXTRA_libgtestmain_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libgtestmain_la_OBJECTS) $(libgtestmain_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

atomic_hash_array_test$(EXEEXT): $(atomic_hash_array_test_OBJECTS) $(atomic_hash_array_test_DEPENDENCIES) $(EXTRA_atomic_hash_array_test_DEPENDENCIES) 
	@rm -f atomic_hash_array_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(atomic_hash_array_test_OBJECTS) $(atomic_hash_array_test_LDADD) $(LIBS)

atomic_hash_map_test$(EXEEXT): $(atomic_hash_map_test_OBJECTS) $(atomic_hash_map_test_DEPENDENCIES) $(EXTRA_atomic_hash_map_test_DEPENDENCIES) 
	@rm -f atomic_hash_map_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(atomic_hash_map_test_OBJECTS) $(atomic_hash_map_test_LDADD) $(LIBS)

benchmark_test$(EXEEXT): $(benchmark_test_OBJECTS) $(benchmark_test_DEPENDENCIES) $(EXTRA_benchmark_test_DEPENDENCIES) 
	@rm -f benchmark_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(benchmark_test_OBJECTS) $(benchmark_test_LDADD) $(LIBS)

bit_iterator_test$(EXEEXT): $(bit_iterator_test_OBJECTS) $(bit_iterator_test_DEPENDENCIES) $(EXTRA_bit_iterator_test_DEPENDENCIES) 
	@rm -f bit_iterator_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bit_iterator_test_OBJECTS) $(bit_iterator_test_LDADD) $(LIBS)

bits_test$(EXEEXT): $(bits_test_OBJECTS) $(bits_test_DEPENDENCIES) $(EXTRA_bits_test_DEPENDENCIES) 
	@rm -f bits_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bits_test_OBJECTS) $(bits_test_LDADD) $(LIBS)

concurrent_skiplist_benchmark$(EXEEXT): $(concurrent_skiplist_benchmark_OBJECTS) $(concurrent_skiplist_benchmark_DEPENDENCIES) $(EXTRA_concurrent_skiplist_benchmark_DEPENDENCIES) 
	@rm -f concurrent_skiplist_benchmark$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(concurrent_skiplist_benchmark_OBJECTS) $(concurrent_skiplist_benchmark_LDADD) $(LIBS)

concurrent_skiplist_test$(EXEEXT): $(concurrent_skiplist_test_OBJECTS) $(concurrent_skiplist_test_DEPENDENCIES) $(EXTRA_concurrent_skiplist_test_DEPENDENCIES) 
	@rm -f concurrent_skiplist_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(concurrent_skiplist_test_OBJECTS) $(concurrent_skiplist_test_LDADD) $(LIBS)

conv_test$(EXEEXT): $(conv_test_OBJECTS) $(conv_test_DEPENDENCIES) $(EXTRA_conv_test_DEPENDENCIES) 
	@rm -f conv_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(conv_test_OBJECTS) $(conv_test_LDADD) $(LIBS)

cpuid_test$(EXEEXT): $(cpuid_test_OBJECTS) $(cpuid_test_DEPENDENCIES) $(EXTRA_cpuid_test_DEPENDENCIES) 
	@rm -f cpuid_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cpuid_test_OBJECTS) $(cpuid_test_LDADD) $(LIBS)

discriminated_ptr_test$(EXEEXT): $(discriminated_ptr_test_OBJECTS) $(discriminated_ptr_test_DEPENDENCIES) $(EXTRA_discriminated_ptr_test_DEPENDENCIES) 
	@rm -f discriminated_ptr_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(discriminated_ptr_test_OBJECTS) $(discriminated_ptr_test_LDADD) $(LIBS)

dynamic_test$(EXEEXT): $(dynamic_test_OBJECTS) $(dynamic_test_DEPENDENCIES) $(EXTRA_dynamic_test_DEPENDENCIES) 
	@rm -f dynamic_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dynamic_test_OBJECTS) $(dynamic_test_LDADD) $(LIBS)

endian_test$(EXEEXT): $(endian_test_OBJECTS) $(endian_test_DEPENDENCIES) $(EXTRA_endian_test_DEPENDENCIES) 
	@rm -f endian_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(endian_test_OBJECTS) $(endian_test_LDADD) $(LIBS)

fbstring_test_using_jemalloc$(EXEEXT): $(fbstring_test_using_jemalloc_OBJECTS) $(fbstring_test_using_jemalloc_DEPENDENCIES) $(EXTRA_fbstring_test_using_jemalloc_DEPENDENCIES) 
	@rm -f fbstring_test_using_jemalloc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fbstring_test_using_jemalloc_OBJECTS) $(fbstring_test_using_jemalloc_LDADD) $(LIBS)

fbvector_test$(EXEEXT): $(fbvector_test_OBJECTS) $(fbvector_test_DEPENDENCIES) $(EXTRA_fbvector_test_DEPENDENCIES) 
	@rm -f fbvector_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fbvector_test_OBJECTS) $(fbvector_test_LDADD) $(LIBS)

fingerprint_test$(EXEEXT): $(fingerprint_test_OBJECTS) $(fingerprint_test_DEPENDENCIES) $(EXTRA_fingerprint_test_DEPENDENCIES) 
	@rm -f fingerprint_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fingerprint_test_OBJECTS) $(fingerprint_test_LDADD) $(LIBS)

foreach_test$(EXEEXT): $(foreach_test_OBJECTS) $(foreach_test_DEPENDENCIES) $(EXTRA_foreach_test_DEPENDENCIES) 
	@rm -f foreach_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(foreach_test_OBJECTS) $(foreach_test_LDADD) $(LIBS)

format_test$(EXEEXT): $(format_test_OBJECTS) $(format_test_DEPENDENCIES) $(EXTRA_format_test_DEPENDENCIES) 
	@rm -f format_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(format_test_OBJECTS) $(format_test_LDADD) $(LIBS)

group_varint_test$(EXEEXT): $(group_varint_test_OBJECTS) $(group_varint_test_DEPENDENCIES) $(EXTRA_group_varint_test_DEPENDENCIES) 
	@rm -f group_varint_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(group_varint_test_OBJECTS) $(group_varint_test_LDADD) $(LIBS)

hash_test$(EXEEXT): $(hash_test_OBJECTS) $(hash_test_DEPENDENCIES) $(EXTRA_hash_test_DEPENDENCIES) 
	@rm -f hash_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hash_test_OBJECTS) $(hash_test_LDADD) $(LIBS)

histogram_test$(EXEEXT): $(histogram_test_OBJECTS) $(histogram_test_DEPENDENCIES) $(EXTRA_histogram_test_DEPENDENCIES) 
	@rm -f histogram_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(histogram_test_OBJECTS) $(histogram_test_LDADD) $(LIBS)

json_test$(EXEEXT): $(json_test_OBJECTS) $(json_test_DEPENDENCIES) $(EXTRA_json_test_DEPENDENCIES) 
	@rm -f json_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(json_test_OBJECTS) $(json_test_LDADD) $(LIBS)

map_util_test$(EXEEXT): $(map_util_test_OBJECTS) $(map_util_test_DEPENDENCIES) $(EXTRA_map_util_test_DEPENDENCIES) 
	@rm -f map_util_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(map_util_test_OBJECTS) $(map_util_test_LDADD) $(LIBS)

packed_sync_ptr_test$(EXEEXT): $(packed_sync_ptr_test_OBJECTS) $(packed_sync_ptr_test_DEPENDENCIES) $(EXTRA_packed_sync_ptr_test_DEPENDENCIES) 
	@rm -f packed_sync_ptr_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(packed_sync_ptr_test_OBJECTS) $(packed_sync_ptr_test_LDADD) $(LIBS)

portability_test$(EXEEXT): $(portability_test_OBJECTS) $(portability_test_DEPENDENCIES) $(EXTRA_portability_test_DEPENDENCIES) 
	@rm -f portability_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(portability_test_OBJECTS) $(portability_test_LDADD) $(LIBS)

producer_consumer_queue_test$(EXEEXT): $(producer_consumer_queue_test_OBJECTS) $(producer_consumer_queue_test_DEPENDENCIES) $(EXTRA_producer_consumer_queue_test_DEPENDENCIES) 
	@rm -f producer_consumer_queue_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(producer_consumer_queue_test_OBJECTS) $(producer_consumer_queue_test_LDADD) $(LIBS)

range_test$(EXEEXT): $(range_test_OBJECTS) $(range_test_DEPENDENCIES) $(EXTRA_range_test_DEPENDENCIES) 
	@rm -f range_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(range_test_OBJECTS) $(range_test_LDADD) $(LIBS)

rw_spinlock_test$(EXEEXT): $(rw_spinlock_test_OBJECTS) $(rw_spinlock_test_DEPENDENCIES) $(EXTRA_rw_spinlock_test_DEPENDENCIES) 
	@rm -f rw_spinlock_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rw_spinlock_test_OBJECTS) $(rw_spinlock_test_LDADD) $(LIBS)

scope_guard_test$(EXEEXT): $(scope_guard_test_OBJECTS) $(scope_guard_test_DEPENDENCIES) $(EXTRA_scope_guard_test_DEPENDENCIES) 
	@rm -f scope_guard_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(scope_guard_test_OBJECTS) $(scope_guard_test_LDADD) $(LIBS)

small_locks_test$(EXEEXT): $(small_locks_test_OBJECTS) $(small_locks_test_DEPENDENCIES) $(EXTRA_small_locks_test_DEPENDENCIES) 
	@rm -f small_locks_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(small_locks_test_OBJECTS) $(small_locks_test_LDADD) $(LIBS)

small_vector_test$(EXEEXT): $(small_vector_test_OBJECTS) $(small_vector_test_DEPENDENCIES) $(EXTRA_small_vector_test_DEPENDENCIES) 
	@rm -f small_vector_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(small_vector_test_OBJECTS) $(small_vector_test_LDADD) $(LIBS)

sorted_vector_types_test$(EXEEXT): $(sorted_vector_types_test_OBJECTS) $(sorted_vector_types_test_DEPENDENCIES) $(EXTRA_sorted_vector_types_test_DEPENDENCIES) 
	@rm -f sorted_vector_types_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sorted_vector_types_test_OBJECTS) $(sorted_vector_types_test_LDADD) $(LIBS)

spooky_hash_v1_test$(EXEEXT): $(spooky_hash_v1_test_OBJECTS) $(spooky_hash_v1_test_DEPENDENCIES) $(EXTRA_spooky_hash_v1_test_DEPENDENCIES) 
	@rm -f spooky_hash_v1_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(spooky_hash_v1_test_OBJECTS) $(spooky_hash_v1_test_LDADD) $(LIBS)

spooky_hash_v2_test$(EXEEXT): $(spooky_hash_v2_test_OBJECTS) $(spooky_hash_v2_test_DEPENDENCIES) $(EXTRA_spooky_hash_v2_test_DEPENDENCIES) 
	@rm -f spooky_hash_v2_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(spooky_hash_v2_test_OBJECTS) $(spooky_hash_v2_test_LDADD) $(LIBS)

string_test$(EXEEXT): $(string_test_OBJECTS) $(string_test_DEPENDENCIES) $(EXTRA_string_test_DEPENDENCIES) 
	@rm -f string_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(string_test_OBJECTS) $(string_test_LDADD) $(LIBS)

synchronized_test$(EXEEXT): $(synchronized_test_OBJECTS) $(synchronized_test_DEPENDENCIES) $(EXTRA_synchronized_test_DEPENDENCIES) 
	@rm -f synchronized_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(synchronized_test_OBJECTS) $(synchronized_test_LDADD) $(LIBS)

thread_cached_int_test$(EXEEXT): $(thread_cached_int_test_OBJECTS) $(thread_cached_int_test_DEPENDENCIES) $(EXTRA_thread_cached_int_test_DEPENDENCIES) 
	@rm -f thread_cached_int_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(thread_cached_int_test_OBJECTS) $(thread_cached_int_test_LDADD) $(LIBS)

thread_local_test$(EXEEXT): $(thread_local_test_OBJECTS) $(thread_local_test_DEPENDENCIES) $(EXTRA_thread_local_test_DEPENDENCIES) 
	@rm -f thread_local_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(thread_local_test_OBJECTS) $(thread_local_test_LDADD) $(LIBS)

timeout_queue_test$(EXEEXT): $(timeout_queue_test_OBJECTS) $(timeout_queue_test_DEPENDENCIES) $(EXTRA_timeout_queue_test_DEPENDENCIES) 
	@rm -f timeout_queue_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(timeout_queue_test_OBJECTS) $(timeout_queue_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f gtest-1.6.0/src/*.$(OBJEXT)
	-rm -f gtest-1.6.0/src/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AtomicHashArrayTest.Po
include ./$(DEPDIR)/AtomicHashMapTest.Po
include ./$(DEPDIR)/BenchmarkTest.Po
include ./$(DEPDIR)/BitIteratorTest.Po
include ./$(DEPDIR)/BitsTest.Po
include ./$(DEPDIR)/ConcurrentSkipListBenchmark.Po
include ./$(DEPDIR)/ConcurrentSkipListTest.Po
include ./$(DEPDIR)/ConvTest.Po
include ./$(DEPDIR)/CpuIdTest.Po
include ./$(DEPDIR)/DiscriminatedPtrTest.Po
include ./$(DEPDIR)/DynamicTest.Po
include ./$(DEPDIR)/EndianTest.Po
include ./$(DEPDIR)/FBStringTest.Po
include ./$(DEPDIR)/FBVectorTest.Po
include ./$(DEPDIR)/FingerprintTest.Po
include ./$(DEPDIR)/ForeachTest.Po
include ./$(DEPDIR)/FormatTest.Po
include ./$(DEPDIR)/GroupVarintTest.Po
include ./$(DEPDIR)/HashTest.Po
include ./$(DEPDIR)/HistogramTest.Po
include ./$(DEPDIR)/JsonTest.Po
include ./$(DEPDIR)/MapUtilTest.Po
include ./$(DEPDIR)/PackedSyncPtrTest.Po
include ./$(DEPDIR)/PortabilityTest.Po
include ./$(DEPDIR)/ProducerConsumerQueueTest.Po
include ./$(DEPDIR)/RWSpinLockTest.Po
include ./$(DEPDIR)/RangeTest.Po
include ./$(DEPDIR)/ScopeGuardTest.Po
include ./$(DEPDIR)/SmallLocksTest.Po
include ./$(DEPDIR)/SpookyHashV1Test.Po
include ./$(DEPDIR)/SpookyHashV2Test.Po
include ./$(DEPDIR)/StringTest.Po
include ./$(DEPDIR)/SynchronizedTest.Po
include ./$(DEPDIR)/ThreadCachedIntTest.Po
include ./$(DEPDIR)/ThreadLocalTest.Po
include ./$(DEPDIR)/TimeoutQueueTest.Po
include ./$(DEPDIR)/small_vector_test.Po
include ./$(DEPDIR)/sorted_vector_test.Po
include gtest-1.6.0/src/$(DEPDIR)/libgtest_la-gtest-all.Plo
include gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest-all.Plo
include gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest_main.Plo

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

gtest-1.6.0/src/libgtest_la-gtest-all.lo: gtest-1.6.0/src/gtest-all.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtest_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtest-1.6.0/src/libgtest_la-gtest-all.lo -MD -MP -MF gtest-1.6.0/src/$(DEPDIR)/libgtest_la-gtest-all.Tpo -c -o gtest-1.6.0/src/libgtest_la-gtest-all.lo `test -f 'gtest-1.6.0/src/gtest-all.cc' || echo '$(srcdir)/'`gtest-1.6.0/src/gtest-all.cc
	$(AM_V_at)$(am__mv) gtest-1.6.0/src/$(DEPDIR)/libgtest_la-gtest-all.Tpo gtest-1.6.0/src/$(DEPDIR)/libgtest_la-gtest-all.Plo
#	$(AM_V_CXX)source='gtest-1.6.0/src/gtest-all.cc' object='gtest-1.6.0/src/libgtest_la-gtest-all.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtest_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtest-1.6.0/src/libgtest_la-gtest-all.lo `test -f 'gtest-1.6.0/src/gtest-all.cc' || echo '$(srcdir)/'`gtest-1.6.0/src/gtest-all.cc

gtest-1.6.0/src/libgtestmain_la-gtest-all.lo: gtest-1.6.0/src/gtest-all.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtestmain_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtest-1.6.0/src/libgtestmain_la-gtest-all.lo -MD -MP -MF gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest-all.Tpo -c -o gtest-1.6.0/src/libgtestmain_la-gtest-all.lo `test -f 'gtest-1.6.0/src/gtest-all.cc' || echo '$(srcdir)/'`gtest-1.6.0/src/gtest-all.cc
	$(AM_V_at)$(am__mv) gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest-all.Tpo gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest-all.Plo
#	$(AM_V_CXX)source='gtest-1.6.0/src/gtest-all.cc' object='gtest-1.6.0/src/libgtestmain_la-gtest-all.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtestmain_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtest-1.6.0/src/libgtestmain_la-gtest-all.lo `test -f 'gtest-1.6.0/src/gtest-all.cc' || echo '$(srcdir)/'`gtest-1.6.0/src/gtest-all.cc

gtest-1.6.0/src/libgtestmain_la-gtest_main.lo: gtest-1.6.0/src/gtest_main.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtestmain_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gtest-1.6.0/src/libgtestmain_la-gtest_main.lo -MD -MP -MF gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest_main.Tpo -c -o gtest-1.6.0/src/libgtestmain_la-gtest_main.lo `test -f 'gtest-1.6.0/src/gtest_main.cc' || echo '$(srcdir)/'`gtest-1.6.0/src/gtest_main.cc
	$(AM_V_at)$(am__mv) gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest_main.Tpo gtest-1.6.0/src/$(DEPDIR)/libgtestmain_la-gtest_main.Plo
#	$(AM_V_CXX)source='gtest-1.6.0/src/gtest_main.cc' object='gtest-1.6.0/src/libgtestmain_la-gtest_main.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtestmain_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gtest-1.6.0/src/libgtestmain_la-gtest_main.lo `test -f 'gtest-1.6.0/src/gtest_main.cc' || echo '$(srcdir)/'`gtest-1.6.0/src/gtest_main.cc

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf gtest-1.6.0/src/.libs gtest-1.6.0/src/_libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_LTLIBRARIES) $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
sorted_vector_types_test.log: sorted_vector_types_test$(EXEEXT)
	@p='sorted_vector_types_test$(EXEEXT)'; \
	b='sorted_vector_types_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
foreach_test.log: foreach_test$(EXEEXT)
	@p='foreach_test$(EXEEXT)'; \
	b='foreach_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
hash_test.log: hash_test$(EXEEXT)
	@p='hash_test$(EXEEXT)'; \
	b='hash_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timeout_queue_test.log: timeout_queue_test$(EXEEXT)
	@p='timeout_queue_test$(EXEEXT)'; \
	b='timeout_queue_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
conv_test.log: conv_test$(EXEEXT)
	@p='conv_test$(EXEEXT)'; \
	b='conv_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
range_test.log: range_test$(EXEEXT)
	@p='range_test$(EXEEXT)'; \
	b='range_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bits_test.log: bits_test$(EXEEXT)
	@p='bits_test$(EXEEXT)'; \
	b='bits_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bit_iterator_test.log: bit_iterator_test$(EXEEXT)
	@p='bit_iterator_test$(EXEEXT)'; \
	b='bit_iterator_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
small_locks_test.log: small_locks_test$(EXEEXT)
	@p='small_locks_test$(EXEEXT)'; \
	b='small_locks_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
packed_sync_ptr_test.log: packed_sync_ptr_test$(EXEEXT)
	@p='packed_sync_ptr_test$(EXEEXT)'; \
	b='packed_sync_ptr_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
small_vector_test.log: small_vector_test$(EXEEXT)
	@p='small_vector_test$(EXEEXT)'; \
	b='small_vector_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
discriminated_ptr_test.log: discriminated_ptr_test$(EXEEXT)
	@p='discriminated_ptr_test$(EXEEXT)'; \
	b='discriminated_ptr_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fbstring_test_using_jemalloc.log: fbstring_test_using_jemalloc$(EXEEXT)
	@p='fbstring_test_using_jemalloc$(EXEEXT)'; \
	b='fbstring_test_using_jemalloc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_cached_int_test.log: thread_cached_int_test$(EXEEXT)
	@p='thread_cached_int_test$(EXEEXT)'; \
	b='thread_cached_int_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_local_test.log: thread_local_test$(EXEEXT)
	@p='thread_local_test$(EXEEXT)'; \
	b='thread_local_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fbvector_test.log: fbvector_test$(EXEEXT)
	@p='fbvector_test$(EXEEXT)'; \
	b='fbvector_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dynamic_test.log: dynamic_test$(EXEEXT)
	@p='dynamic_test$(EXEEXT)'; \
	b='dynamic_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
json_test.log: json_test$(EXEEXT)
	@p='json_test$(EXEEXT)'; \
	b='json_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scope_guard_test.log: scope_guard_test$(EXEEXT)
	@p='scope_guard_test$(EXEEXT)'; \
	b='scope_guard_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
endian_test.log: endian_test$(EXEEXT)
	@p='endian_test$(EXEEXT)'; \
	b='endian_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rw_spinlock_test.log: rw_spinlock_test$(EXEEXT)
	@p='rw_spinlock_test$(EXEEXT)'; \
	b='rw_spinlock_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
synchronized_test.log: synchronized_test$(EXEEXT)
	@p='synchronized_test$(EXEEXT)'; \
	b='synchronized_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
concurrent_skiplist_test.log: concurrent_skiplist_test$(EXEEXT)
	@p='concurrent_skiplist_test$(EXEEXT)'; \
	b='concurrent_skiplist_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
histogram_test.log: histogram_test$(EXEEXT)
	@p='histogram_test$(EXEEXT)'; \
	b='histogram_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
group_varint_test.log: group_varint_test$(EXEEXT)
	@p='group_varint_test$(EXEEXT)'; \
	b='group_varint_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
map_util_test.log: map_util_test$(EXEEXT)
	@p='map_util_test$(EXEEXT)'; \
	b='map_util_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
string_test.log: string_test$(EXEEXT)
	@p='string_test$(EXEEXT)'; \
	b='string_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
producer_consumer_queue_test.log: producer_consumer_queue_test$(EXEEXT)
	@p='producer_consumer_queue_test$(EXEEXT)'; \
	b='producer_consumer_queue_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
atomic_hash_array_test.log: atomic_hash_array_test$(EXEEXT)
	@p='atomic_hash_array_test$(EXEEXT)'; \
	b='atomic_hash_array_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
atomic_hash_map_test.log: atomic_hash_map_test$(EXEEXT)
	@p='atomic_hash_map_test$(EXEEXT)'; \
	b='atomic_hash_map_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
format_test.log: format_test$(EXEEXT)
	@p='format_test$(EXEEXT)'; \
	b='format_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fingerprint_test.log: fingerprint_test$(EXEEXT)
	@p='fingerprint_test$(EXEEXT)'; \
	b='fingerprint_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
portability_test.log: portability_test$(EXEEXT)
	@p='portability_test$(EXEEXT)'; \
	b='portability_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cpuid_test.log: cpuid_test$(EXEEXT)
	@p='cpuid_test$(EXEEXT)'; \
	b='cpuid_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spooky_hash_v1_test.log: spooky_hash_v1_test$(EXEEXT)
	@p='spooky_hash_v1_test$(EXEEXT)'; \
	b='spooky_hash_v1_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spooky_hash_v2_test.log: spooky_hash_v2_test$(EXEEXT)
	@p='spooky_hash_v2_test$(EXEEXT)'; \
	b='spooky_hash_v2_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f gtest-1.6.0/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f gtest-1.6.0/src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) gtest-1.6.0/src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) gtest-1.6.0/src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkLTLIBRARIES \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
